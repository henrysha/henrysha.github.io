{"version":3,"file":"component---src-templates-blog-post-tsx-d5c2698b7d8200dd7e7c.js","mappings":"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","sources":["webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/construct.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://henry-s-devlog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://henry-s-devlog/./node_modules/gatsby-plugin-mdx/index.js","webpack://henry-s-devlog/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://henry-s-devlog/./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","webpack://henry-s-devlog/./src/components/MdxUi.tsx","webpack://henry-s-devlog/./node_modules/date-fns/esm/isDate/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/isValid/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/format/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack://henry-s-devlog/./node_modules/date-fns/esm/parse/index.js","webpack://henry-s-devlog/./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js","webpack://henry-s-devlog/./src/components/BlogBreadcrumb.tsx","webpack://henry-s-devlog/./src/templates/blog-post.tsx"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\n\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\n\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };","import {\n  Heading,\n  Text,\n  Image,\n  HeadingProps,\n  TextProps,\n  ImageProps,\n  Code,\n  CodeProps,\n  Link,\n  LinkProps,\n  Box,\n  Icon,\n  HStack,\n} from '@chakra-ui/react'\nimport { FaExternalLinkAlt } from 'react-icons/fa'\n\nexport const chakraUiComponents = {\n  h1: (props: HeadingProps) => <Heading as='h1' mb={2} size='xl' {...props} />,\n  h2: (props: HeadingProps) => <Heading as='h2' mb={2} size='lg' {...props} />,\n  h3: (props: HeadingProps) => (\n    <Heading as='h3' mb={2} size='md' fontSize='2xl' {...props} />\n  ),\n  h4: (props: HeadingProps) => <Heading as='h4' mb={2} size='md' {...props} />,\n  h5: (props: HeadingProps) => <Heading as='h5' mb={2} size='sm' {...props} />,\n  h6: (props: HeadingProps) => <Heading as='h6' mb={2} size='xs' {...props} />,\n  p: (props: TextProps) => <Text lineHeight={2} fontSize='lg' {...props} />,\n  img: (props: ImageProps) => <Image {...props} />,\n  inlineCode: (props: CodeProps) => (\n    <Code colorScheme='gray' variant='solid' {...props} />\n  ),\n  a: (props: LinkProps) => <Link color='teal' {...props} />,\n  blockquote: (props: TextProps) => (\n    <Box\n      as='blockquote'\n      borderLeft='5px solid gray'\n      bg='gray.100'\n      mx={[0, null, 5]}\n      my={[2, null, 5]}\n      px={5}\n      py={2}\n      fontStyle='italic'\n      {...props}\n    />\n  ),\n}\n","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function set(date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function parse(string, token, _match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"spacing\"],\n    _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n    _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n    _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n/**\n * React component that separates each breadcrumb link\n */\n\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      href = props.href,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\n\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };","import { Breadcrumb, BreadcrumbItem, BreadcrumbLink } from '@chakra-ui/react'\n\nexport const BlogBreadcrumb = ({\n  category,\n  title,\n}: {\n  category?: string\n  title?: string\n}) => {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem>\n        <BreadcrumbLink href='/'>🏠</BreadcrumbLink>\n      </BreadcrumbItem>\n      <BreadcrumbItem>\n        <BreadcrumbLink>{category}</BreadcrumbLink>\n      </BreadcrumbItem>\n      <BreadcrumbItem>\n        <BreadcrumbLink isCurrentPage>{title}</BreadcrumbLink>\n      </BreadcrumbItem>\n    </Breadcrumb>\n  )\n}\n","import Layout from '@/components/Layout'\nimport { chakraUiComponents } from '@/components/MdxUi'\nimport { Profile } from '@/components/Profile'\nimport {\n  Box,\n  Grid,\n  GridItem,\n  Heading,\n  Link,\n  ListItem,\n  UnorderedList,\n} from '@chakra-ui/react'\nimport { MDXProvider } from '@mdx-js/react'\nimport { format, parse } from 'date-fns'\nimport { ko } from 'date-fns/locale'\nimport { graphql, PageProps } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { BlogBreadcrumb } from '@/components/BlogBreadcrumb'\n\nimport './blog-post.scss'\n\ntype TocItem = {\n  url: string\n  title: string\n  items?: TocItem[]\n}\n\ntype DataProps = {\n  mdx: {\n    frontmatter: {\n      category: string\n      date_created: string\n      date_updated: string\n      tag: string[]\n      title: string\n      timezone: string\n    }\n    fields: {\n      slug: string\n    }\n    tableOfContents: {\n      items: TocItem[]\n    }\n    body: string\n    timeToRead: number\n  }\n}\n\nconst TableOfContents = ({ items }: { items: TocItem[] }) => {\n  return (\n    <UnorderedList listStyleType='none' spacing={5}>\n      {items.map(({ url, title, items: subItems }: TocItem) => (\n        <>\n          <ListItem key={url}>\n            <Link href={url}>{title}</Link>\n          </ListItem>\n          {subItems && <TableOfContents items={subItems} />}\n        </>\n      ))}\n    </UnorderedList>\n  )\n}\n\nconst BlogPost = ({ data }: PageProps<DataProps>) => {\n  return (\n    <Layout>\n      <Grid maxW='1600px' m='0 auto' px={[4, null, 10]} gap={5}>\n        <BlogBreadcrumb\n          category={data.mdx.frontmatter.category}\n          title={data.mdx.frontmatter.title}\n        />\n        <Profile\n          isBlogPost\n          createdDate={format(\n            parse(data.mdx.frontmatter.date_updated, 'yyyy-MM-dd hh:mm', 0),\n            'PPP',\n            { locale: ko }\n          )}\n          minutesRead={data.mdx.timeToRead}\n        />\n        <Heading as='h1' size='xl' mb={0}>\n          {data.mdx.frontmatter.title}\n        </Heading>\n        <Grid\n          gap={2}\n          templateColumns={{ base: '1fr', md: '1fr 200px', lg: '1fr 300px' }}\n        >\n          <GridItem maxW='100vw'>\n            <MDXProvider components={chakraUiComponents}>\n              <MDXRenderer>{data.mdx.body}</MDXRenderer>\n            </MDXProvider>\n          </GridItem>\n          <GridItem>\n            <Box position='fixed' p={2} bgColor='gray.100'>\n              <Heading as='h4' size='sm' mb={2}>\n                Table of Contents\n              </Heading>\n              <TableOfContents items={data.mdx.tableOfContents.items} />\n            </Box>\n          </GridItem>\n        </Grid>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query GetPost($slug: String) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        category\n        date_created\n        date_updated\n        tag\n        title\n        timezone\n      }\n      fields {\n        slug\n      }\n      tableOfContents\n      body\n      timeToRead\n    }\n  }\n`\n\nexport default BlogPost\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","values","map","fn","createElement","_extends","assign","target","source","hasOwnProperty","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_excluded","_excluded2","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","width","height","Image$1","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","shared","objectFit","objectPosition","as","className","displayName","chakraUiComponents","h1","_jsx","Heading","mb","size","h2","h3","fontSize","h4","h5","h6","p","Text","lineHeight","inlineCode","Code","colorScheme","variant","Link","color","blockquote","Box","borderLeft","bg","mx","my","px","py","fontStyle","isDate","requiredArgs","Date","isValid","dirtyDate","date","toDate","isNaN","Number","toInteger","dirtyNumber","NaN","number","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","getTime","amount","subMilliseconds","MILLISECONDS_IN_DAY","startOfUTCISOWeek","weekStartsOn","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeek","dirtyOptions","options","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","addLeadingZeros","targetLength","sign","output","abs","y","token","signedYear","M","month","getUTCMonth","String","d","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","dayPeriodEnum","G","localize","era","ordinalNumber","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","quarter","context","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","dayPeriod","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","format","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","getTimezoneOffsetInMilliseconds","utcDate","formatterOptions","result","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","numericPatterns","timezonePatterns","parseNumericPattern","string","valueCallback","parseInt","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","_options","set","flags","incompatibleTokens","isTwoDigitYear","validate","_date","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","setUTCWeek","dirtyISOWeek","setUTCISOWeek","subPriority","isLeapYear","wholeWeekDays","setUTCISODay","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","index","tokens","usedTokens","parser","incompatibleToken","_i","usedToken","fullToken","parseResult","uniquePrioritySetters","setter","sort","filter","array","setterArray","convertedDate","setFullYear","setHours","_excluded3","_excluded4","BreadcrumbSeparator","spacing","separatorStyles","separator","role","__css","BreadcrumbLink","isCurrentPage","href","styles","sharedProps","cx","link","BreadcrumbItem","isLastChild","clones","child","type","itemStyles","display","alignItems","item","_className","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","container","BlogBreadcrumb","category","title","_jsxs","TableOfContents","items","UnorderedList","listStyleType","url","subItems","ListItem","data","Layout","Grid","maxW","gap","frontmatter","Profile","isBlogPost","createdDate","date_updated","ko","minutesRead","timeToRead","templateColumns","base","md","lg","GridItem","MDXProvider","components","body","position","bgColor","tableOfContents"],"sourceRoot":""}